<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:BalansirApp.Pages"
       Title="BalansirApp"
       x:Class="BalansirApp.AppShell"
       FlyoutBackgroundColor="{StaticResource PageBackgroundColor}">

    <!--
        The overall app visual hierarchy is defined here, along with navigation.    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource PageBackgroundColor}" />
                <Setter Property="Shell.ForegroundColor" Value="{StaticResource BrightTextColor}" />
                <Setter Property="Shell.TitleColor" Value="{StaticResource BrightTextColor}" />
                <Setter Property="Shell.DisabledColor" Value="{StaticResource BrightTextColor}" />
                <Setter Property="Shell.UnselectedColor" Value="{StaticResource PageBackgroundColor}" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource BrightTextColor}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="{StaticResource BrightTextColor}"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="{StaticResource BrightTextColor}"/>
                <Setter Property="Shell.TabBarTitleColor" Value="{StaticResource AccentRedColor}"/>
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource PageBackgroundColor}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource PageBackgroundColor}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource AccentRedColor}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.FontSize" Value="Subtitle" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Shell.Resources>

    <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->
    <!--<FlyoutItem Title="About" Icon="icon_about.png">
        <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:AboutPage}" />
    </FlyoutItem>-->

    <MenuItem Text="BALANSIR" StyleClass="MenuItemLayoutStyle"/>
    <FlyoutItem Title="Склад" Icon="icons8_big_parcel_24_bright">
        <ShellContent ContentTemplate="{DataTemplate local:ProductsListView_Page}" />
    </FlyoutItem>
    <FlyoutItem Title="Журнал прихода\расхода" Icon="icons8_in_transit_24_bright">
        <ShellContent ContentTemplate="{DataTemplate local:ActsListView_Page}" />
    </FlyoutItem>
    <FlyoutItem Title="Настройки" Icon="icons8_settings_24_bright">
        <ShellContent ContentTemplate="{DataTemplate local:Settings_Page}" />
    </FlyoutItem>
    <FlyoutItem Title="О приложении" Icon="icons8_about_24_bright">
        <ShellContent ContentTemplate="{DataTemplate local:About_Page}" />
    </FlyoutItem>

    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <!--<MenuItem Text="Logout" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked"/>-->

    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <TabBar>
        <!--<ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />-->
    </TabBar>

    <!-- Optional Templates 
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>ContentHere</Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    -->
    <Shell.ItemTemplate>
        <DataTemplate>
            <Grid x:Name="grid" Style="{StaticResource BaseStyle}" BackgroundColor="{StaticResource PageBackgroundColor}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.2*" />
                    <ColumnDefinition Width="0.8*" />
                </Grid.ColumnDefinitions>
                <Image Source="{Binding Icon}"
                       x:Name="img"
                       Margin="5"
                       HeightRequest="24" />
                <Label Grid.Column="1"
                       BackgroundColor="{StaticResource PageBackgroundColor}"
                       TextColor="{StaticResource BrightTextColor}"
                       Text="{Binding Title}"
                       VerticalTextAlignment="Center" >
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference grid},Path=BackgroundColor}" Value="Accent">
                            <Setter Property="TextColor" Value="{StaticResource BrightTextColor}"/>
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </Grid>
        </DataTemplate>
    </Shell.ItemTemplate>

</Shell>
